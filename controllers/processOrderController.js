const line = require('@line/bot-sdk');
const { supabase } = require('../utils/supabaseClient');
require('dotenv').config();

// LINE Bot 1 Client (р╕кр╕│р╕лр╕гр╕▒р╕Ър╕кр╣Ир╕Зр╣Гр╕лр╣Й User)
const client = new line.Client({
  channelAccessToken: process.env.LINE_CHANNEL_ACCESS_TOKEN
});

const processOrder = async (req, res) => {
  try {
    const { ref_code, license_no, status } = req.body;

    // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕е
    if (!ref_code || !license_no || !status) {
      return res.status(400).json({ message: 'р╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Др╕бр╣Ир╕Др╕гр╕Ър╕Цр╣Йр╕зр╕Щ' });
    }

    console.log(`ЁЯУе р╕гр╕▒р╕Ър╕Др╕│р╕кр╕▒р╣Ир╕Зр╕Ир╕▓р╕Б API2: ${status === 'Ap' ? 'р╕нр╕Щр╕╕р╕бр╕▒р╕Хр╕┤' : 'р╕Ыр╕Пр╕┤р╣Ар╕кр╕Ш'} - ${ref_code}`);

    if (status === 'Ap') {
      // р╕Бр╕гр╕Ур╕╡р╕нр╕Щр╕╕р╕бр╕▒р╕Хр╕┤
      await handleApprovalProcess(ref_code, license_no);
    } else {
      // р╕Бр╕гр╕Ур╕╡р╕Ыр╕Пр╕┤р╣Ар╕кр╕Ш  
      await handleRejectionProcess(ref_code, license_no);
    }

    // тЬЕ р╕Хр╕нр╕Ъ 200 р╕Бр╕ер╕▒р╕Ър╣Др╕Ы API2
    return res.status(200).json({ 
      message: `${status === 'Ap' ? 'р╕нр╕Щр╕╕р╕бр╕▒р╕Хр╕┤' : 'р╕Ыр╕Пр╕┤р╣Ар╕кр╕Ш'}р╕кр╕│р╣Ар╕гр╣Зр╕И`,
      ref_code,
      license_no
    });

  } catch (error) {
    console.error('тЭМ р╕Ыр╕гр╕░р╕бр╕зр╕ер╕Ьр╕ер╕ер╣Йр╕бр╣Ар╕лр╕ер╕з:', error);
    return res.status(500).json({ error: error.message });
  }
};

// р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕Ир╕▒р╕Фр╕Бр╕▓р╕гр╕нр╕Щр╕╕р╕бр╕▒р╕Хр╕┤
const handleApprovalProcess = async (ref_code, license_no) => {
  // р╕нр╕▒р╕Ыр╣Ар╕Фр╕Хр╕кр╕Цр╕▓р╕Щр╕░р╣Ар╕Ыр╣Зр╕Щ approved
  // р╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕е line_user_id р╣Бр╕ер╕░ serial_key
  // р╕кр╣Ир╕З Flex р╣Др╕Ыр╕лр╕▓ User
  // р╕нр╕▒р╕Ыр╣Ар╕Фр╕Х username/password
};

// р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕Ир╕▒р╕Фр╕Бр╕▓р╕гр╕Ыр╕Пр╕┤р╣Ар╕кр╕Ш
const handleRejectionProcess = async (ref_code, license_no) => {
  // р╕нр╕▒р╕Ыр╣Ар╕Фр╕Хр╕кр╕Цр╕▓р╕Щр╕░р╣Ар╕Ыр╣Зр╕Щ rejected
  // р╕кр╣Ир╕З Flex р╣Бр╕Ир╣Йр╕Зр╕Ыр╕Пр╕┤р╣Ар╕кр╕Шр╣Др╕Ыр╕лр╕▓ User
};

module.exports = { processOrder };
