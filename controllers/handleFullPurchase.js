const { supabase } = require('../utils/supabaseClient');
const axios = require('axios');
const { getNextLicenseNumber } = require('../services/licenseService');

const handleFullPurchase = async (req, res) => {
  console.log("üü° ‡πÄ‡∏£‡∏¥‡πà‡∏° Logic1: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°");

  const { first_name, last_name, national_id, phone_number, ref_code, product_source } = req.body;

  if (!first_name || !last_name || !national_id || !phone_number || !ref_code || !product_source) {
    console.log("‚ùå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö");
    return res.status(400).json({ message: '‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á' });
  }

  // üîµ Logic 2: ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô auth_sessions
  console.log("üü° ‡πÄ‡∏£‡∏¥‡πà‡∏° Logic2: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ref_code ‡πÉ‡∏ô auth_sessions");
  const { data: sessionData, error: sessionError } = await supabase
    .from('auth_sessions')
    .select('*')
    .eq('ref_code', ref_code)
    .single();

  if (sessionError || !sessionData) {
    console.log("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Ref.Code:", ref_code);
    return res.status(404).json({ message: '‡πÑ‡∏°‡πà‡∏û‡∏ö Ref.Code ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö' });
  }

  const line_user_id = sessionData.line_user_id;

  const { error: updateError } = await supabase
    .from('auth_sessions')
    .update({
      first_name,
      last_name,
      national_id,
      phone_number,
      source: 'full_customer',
      pdpa_status: true
    })
    .eq('ref_code', ref_code);

  if (updateError) {
    console.log("‚ùå ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô auth_sessions ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
    return res.status(500).json({ message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤' });
  }

  // üü¢ Logic 3: ‡∏™‡∏£‡πâ‡∏≤‡∏á license ‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô license_holders
  console.log("üü° ‡πÄ‡∏£‡∏¥‡πà‡∏° Logic3: ‡∏™‡∏£‡πâ‡∏≤‡∏á license_no ‡πÉ‡∏´‡∏°‡πà");

  const license_no = await getNextLicenseNumber();

  const { error: insertLicenseError } = await supabase
    .from('license_holders')
    .insert([{
      license_no,
      ref_code,
      national_id,
      phone_number,
      first_name,
      last_name,
      line_user_id,
      product_source,
      is_verify: true,
      pdpa_status: true
    }]);

  if (insertLicenseError) {
    console.log("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏° license:", insertLicenseError);
    return res.status(500).json({ message: '‡πÄ‡∏û‡∏¥‡πà‡∏° license ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' });
  }

  // üü£ Logic 4: ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô slip_submissions
  console.log("üü° ‡πÄ‡∏£‡∏¥‡πà‡∏° Logic4: ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• slip_submissions");

  const { error: insertSlipError } = await supabase
    .from('slip_submissions')
    .insert([{
      license_no,
      product_source,
      submissions_status: 'pending'
    }]);

  if (insertSlipError) {
    console.log("‚ùå ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å slip ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
    return res.status(500).json({ message: '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å slip ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' });
  }

  // üöÄ ‡∏™‡πà‡∏á POST ‡πÑ‡∏õ‡∏¢‡∏±‡∏á API2 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ Bot2 ‡∏™‡πà‡∏á Flex
  console.log("üü¢ ‡∏™‡πà‡∏á POST ‡πÑ‡∏õ‡∏¢‡∏±‡∏á API2 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ Bot ‡∏™‡πà‡∏á Flex");
  try {
    await axios.post('https://line-bot-adt2.onrender.com/flex/send-order', {
      ref_code
    });
    console.log("‚úÖ ‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á API2 ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
    return res.status(200).json({ message: '‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß' });
  } catch (api2Error) {
    console.log("‚ùå ‡∏™‡πà‡∏á POST ‡πÑ‡∏õ API2 ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", api2Error.message);
    return res.status(500).json({ message: '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ' });
  }
};

module.exports = { handleFullPurchase };
