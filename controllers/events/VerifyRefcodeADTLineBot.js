const { supabase } = require('../../utils/supabaseClient');
const line = require('@line/bot-sdk');

// LINE CONFIG
const config = {
  channelAccessToken: process.env.LINE_CHANNEL_ACCESS_TOKEN,
  channelSecret: process.env.LINE_CHANNEL_SECRET
};

const client = new line.Client(config);

// üìå Verify Refcode Handler
const handleVerifyRefcode = async (refCode) => {
  try {
    console.log('=== VERIFY REFCODE START ===');
    console.log('Ref Code received:', refCode);

    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ref_code ‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á auth_sessions
    const { data, error } = await supabase
      .from('auth_sessions')
      .select('serial_key, line_user_id')
      .eq('ref_code', refCode)
      .single();

    console.log('Database result:', { data, error });

    if (error) {
      console.error('‚ùå Database Error:', error.message);
      return {
        success: false,
        message: '‡πÑ‡∏°‡πà‡∏û‡∏ö Ref.Code ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö'
      };
    }

    if (!data || !data.serial_key || !data.line_user_id) {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ref_code');
      return {
        success: false,
        message: '‡πÑ‡∏°‡πà‡∏û‡∏ö Ref.Code ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö'
      };
    }

    const { serial_key, line_user_id } = data;
    console.log('Found data - Serial Key:', serial_key, 'Line User ID:', line_user_id);

    // ‡∏™‡πà‡∏á serial_key ‡∏ú‡πà‡∏≤‡∏ô LINE Bot
    await client.pushMessage(line_user_id, {
      type: 'text',
      text: `üîê ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Ref.Code: ${refCode}\n‚û°Ô∏è Serial Key ‡∏Ñ‡∏∑‡∏≠   ${serial_key}`
    });

    console.log('‚úÖ ‡∏™‡πà‡∏á Serial Key ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    console.log('=== VERIFY REFCODE END ===');

    return {
      success: true,
      message: '‡∏™‡πà‡∏á Serial Key ‡∏ú‡πà‡∏≤‡∏ô LINE ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à'
    };

  } catch (error) {
    console.error('‚ùå Verify Refcode Error:', error.message);
    return {
      success: false,
      message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö'
    };
  }
};

module.exports = {
  handleVerifyRefcode
};
