const { supabase } = require('../../utils/supabaseClient');

// üìå Confirm Registration Handler
const handleConfirmRegistration = async (refCode, serialKey) => {
  try {
    console.log('=== CONFIRM REGISTRATION START ===');
    console.log('Ref Code:', refCode);
    console.log('Serial Key:', serialKey);

    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ref_code + serial_key ‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á auth_sessions
    const { data, error } = await supabase
      .from('auth_sessions')
      .select('*')
      .eq('ref_code', refCode)
      .eq('serial_key', serialKey)
      .single();

    console.log('Database search result:', { data, error });

    if (error) {
      console.error('‚ùå Database Error:', error.message);
      return {
        success: false,
        message: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á'
      };
    }

    if (!data) {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ref_code + serial_key');
      return {
        success: false,
        message: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á'
      };
    }

    console.log('‚úÖ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• - ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞...');

    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô ACTIVE
    const { error: updateError } = await supabase
      .from('auth_sessions')
      .update({
        status: 'ACTIVE'
      })
      .eq('ref_code', refCode)
      .eq('serial_key', serialKey);

    if (updateError) {
      console.error('‚ùå Update Error:', updateError.message);
      return {
        success: false,
        message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'
      };
    }

    console.log('‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ ACTIVE ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    console.log('=== CONFIRM REGISTRATION END ===');

    return {
      success: true,
      message: '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à'
    };

  } catch (error) {
    console.error('‚ùå Confirm Registration Error:', error.message);
    return {
      success: false,
      message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö'
    };
  }
};

module.exports = {
  handleConfirmRegistration
};
