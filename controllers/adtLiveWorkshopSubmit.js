const { supabase } = require('../utils/supabaseClient');
const { client } = require('@line/bot-sdk');

const handleSubmitLiveWorkshop = async (req, res) => {
  const { license_no, ref_code, serial_key } = req.body;

  // üîπ Step 0: ‡∏ï‡∏£‡∏ß‡∏à‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏£‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ù‡∏±‡πà‡∏á VBA
  if (!license_no || !ref_code || !serial_key) {
    return res.status(400).json({ error: 'Missing required fields.' });
  }

  // üîπ Step 1: ‡∏î‡∏∂‡∏á first_name, last_name ‡∏à‡∏≤‡∏Å license_holders
  const { data: licenseData, error: licenseError } = await supabase
    .from('license_holders')
    .select('first_name, last_name')
    .eq('license_no', license_no)
    .maybeSingle();

  // üîπ Step 2: ‡∏î‡∏∂‡∏á line_user_id, phone_number ‡∏à‡∏≤‡∏Å auth_sessions
  const { data: sessionData, error: sessionError } = await supabase
    .from('auth_sessions')
    .select('line_user_id, phone_number')
    .eq('ref_code', ref_code)
    .eq('serial_key', serial_key)
    .maybeSingle();

  if (sessionError || !sessionData) {
    return res.status(403).json({ error: 'Ref.Code or Serial Key not found.' });
  }

  const { line_user_id, phone_number } = sessionData;
  const first_name = licenseData?.first_name || '';
  const last_name = licenseData?.last_name || '';

  // üîπ Step 3: ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï source ‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô auth_sessions
  const newSource = 'adt_workshop_attendee';
  await supabase
    .from('auth_sessions')
    .update({ source: newSource })
    .eq('ref_code', ref_code);

  // üîπ Step 4: ‡∏™‡∏£‡πâ‡∏≤‡∏á student_status
  const student_status = licenseData ? license_no : newSource;

  // üîπ Step 5: Insert ‡∏•‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á workshop
  const { error: insertError } = await supabase
    .from('adt_workshop_attendees')
    .insert({
      ref_code,
      first_name,
      last_name,
      phone_number,
      line_user_id,
      student_status
    });

  if (insertError) {
    return res.status(500).json({ error: 'Failed to save workshop registration.' });
  }

  // üîπ Step 6: ‡∏™‡πà‡∏á Flex ‡πÄ‡∏ä‡∏¥‡∏ç‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°
  const flexMsg = {
    type: 'flex',
    altText: '‚úÖ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ADT Workshop',
    contents: {
      type: 'bubble',
      hero: {
        type: 'image',
        url: 'https://wpxpukbvynxawfxcdroj.supabase.co/storage/v1/object/public/adtliveworkshop/Live01.jpg',
        size: 'full',
        aspectRatio: '16:9',
        aspectMode: 'cover'
      },
      body: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'text',
            text: '‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß',
            weight: 'bold',
            size: 'lg',
            color: '#00AA00'
          },
          {
            type: 'text',
            text: '‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ô',
            size: 'sm',
            wrap: true
          }
        ]
      },
      footer: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'button',
            style: 'primary',
            color: '#1DB446',
            action: {
              type: 'uri',
              label: 'üì• ‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ô',
              uri: 'https://line.me/R/ti/g/xJ_XARnCVZ'
            }
          }
        ]
      }
    }
  };

  try {
    await client.pushMessage(line_user_id, flexMsg);

    // üîπ Step 7: ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡∏Ñ‡∏•‡∏≤‡∏™
    await client.pushMessage(line_user_id, {
      type: 'text',
      text: 'üìå ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏û‡∏µ‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß\n‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß ‡∏≠.‡πÄ‡∏Å‡πà‡∏á ‡∏à‡∏∞‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÉ‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ 24 ‡∏û.‡∏Ñ. 2568 ‡πÄ‡∏ß‡∏•‡∏≤ 19:00 ‡∏ô. ‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö üïñ'
    });

  } catch (err) {
    console.error('‚ùå Error sending Flex or message:', err.message);
    return res.status(200).json({ message: 'Registered, but failed to send LINE message.' });
  }

  // üîπ Step 8: ‡∏à‡∏ö‡∏á‡∏≤‡∏ô ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö VBA
  return res.status(200).json({ message: 'Registration completed and Flex sent.' });
};

module.exports = { handleSubmitLiveWorkshop };
