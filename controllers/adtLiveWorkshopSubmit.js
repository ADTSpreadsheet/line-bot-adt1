const line = require('@line/bot-sdk');
const { supabase } = require('../utils/supabaseClient');

const client = new line.Client({
  channelAccessToken: process.env.LINE_CHANNEL_ACCESS_TOKEN,
  channelSecret: process.env.LINE_CHANNEL_SECRET
});

const handleSubmitLiveWorkshop = async (req, res) => {
  const {
    ref_code,
    serial_key,
    first_name,
    last_name,
    phone_number,
    has_adt,
    license_no,
    adt_class_no
  } = req.body;

  // üîé Logic 1: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏£‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  if (!ref_code || !serial_key || !first_name || !last_name || !phone_number || !has_adt || !adt_class_no) {
    return res.status(400).json({ error: '‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á' });
  }

  // üîé Logic 2: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ref_code + serial_key
  const { data: sessionData, error: sessionError } = await supabase
    .from('auth_sessions')
    .select('line_user_id')
    .eq('ref_code', ref_code)
    .eq('serial_key', serial_key)
    .maybeSingle();

  if (sessionError || !sessionData) {
    return res.status(403).json({ error: 'Ref.Code ‡∏´‡∏£‡∏∑‡∏≠ Serial Key ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á' });
  }

  const { line_user_id } = sessionData;

  // üß† ‡∏Å‡∏≥‡∏´‡∏ô‡∏î student_status ‡∏ï‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç
  const student_status = has_adt === 'yes' ? license_no : 'attendees';

  // üõ†Ô∏è ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï source ‡πÉ‡∏ô auth_sessions
  await supabase
    .from('auth_sessions')
    .update({ source: student_status })
    .eq('ref_code', ref_code);

  // üíæ Insert ‡∏•‡∏á adt_workshop_attendees
  const { error: insertError } = await supabase
    .from('adt_workshop_attendees')
    .insert({
      ref_code,
      first_name,
      last_name,
      phone_number,
      line_user_id,
      student_status,
      has_adt,
      license_no: has_adt === 'yes' ? license_no : null,
      adt_class_no,
      second_session_status: 'pending'
    });

  if (insertError) {
    return res.status(500).json({ error: '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' });
  }

  // üì® Logic 2.2: ‡∏™‡πà‡∏á Flex Message
  const flexMsg = {
    type: 'flex',
    altText: '‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô - ‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ADT Workshop',
    contents: {
      type: 'bubble',
      hero: {
        type: 'image',
        url: 'https://wpxpukbvynxawfxcdroj.supabase.co/storage/v1/object/public/adtliveworkshop//Live02.jpg',
        size: 'full',
        aspectRatio: '16:9',
        aspectMode: 'cover'
      },
      body: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'text',
            text: 'üéâ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß',
            weight: 'bold',
            size: 'lg',
            color: '#1DB446'
          },
          {
            type: 'text',
            text: 'üìå ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ADTLive Workshop',
            size: 'sm',
            margin: 'md'
          },
          {
            type: 'text',
            text: 'üîê ‡∏£‡∏´‡∏±‡∏™‡∏´‡πâ‡∏≠‡∏á: ADT0531',
            size: 'sm',
            margin: 'md',
            color: '#555555'
          }
        ]
      },
      footer: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'button',
            style: 'primary',
            color: '#1DB446',
            action: {
              type: 'uri',
              label: 'üì• ‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô Zoom',
              uri: 'https://us06web.zoom.us/j/87599526391?pwd=U0wdvFqGbHaaLrlkEWbO7fRbaHqNw9.1'
            }
          }
        ]
      }
    }
  };

  try {
    await client.pushMessage(line_user_id, flexMsg);

    // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡πâ‡∏≥‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
    await client.pushMessage(line_user_id, {
      type: 'text',
      text: 'üïñ ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ï‡∏±‡∏ß‡πÉ‡∏´‡πâ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö\n‡∏Ñ‡∏•‡∏≤‡∏™‡∏™‡∏î‡∏à‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 31 ‡∏û.‡∏Ñ. 2568 ‡πÄ‡∏ß‡∏•‡∏≤ 19:00 ‡∏ô. ‡∏ú‡πà‡∏≤‡∏ô Zoom ‡∏Ñ‡∏£‡∏±‡∏ö'
    });
  } catch (err) {
    console.error('‚ùå Error sending Flex:', err.message);
    return res.status(200).json({ message: '‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡πÅ‡∏ï‡πà‡∏™‡πà‡∏á LINE ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' });
  }

  // üéØ Logic 3: ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö 200 ‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏ß‡πá‡∏ö
  return res.status(200).json({ message: '‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢ ‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á Flex ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' });
};

module.exports = { handleSubmitLiveWorkshop };
